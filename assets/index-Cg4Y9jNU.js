(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))a(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const i of n.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function a(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();console.log("--- script.js module loaded ---");const p=document.getElementById("task-input"),M=document.getElementById("task-details"),y=document.getElementById("task-due-date"),L=document.getElementById("add-button"),u=document.getElementById("task-list"),$=document.getElementById("in-progress-task-list"),m=document.getElementById("completed-task-list"),P=new bootstrap.Modal(document.getElementById("editTaskModal")),J=document.getElementById("edit-task-text"),R=document.getElementById("edit-task-details"),z=document.getElementById("edit-task-due-date"),W=document.getElementById("edit-task-priority"),q=document.getElementById("save-edit-button");let D=null;const v=document.createElement("select");v.id="task-priority";v.className="form-select";v.style.maxWidth="100px";v.innerHTML=`
    <option value="0">なし</option>
    <option value="1">★</option>
    <option value="2">★★</option>
    <option value="3">★★★</option>
`;document.getElementById("input-area").insertBefore(v,L);!p||!y||!L||!u||!m?console.error("Error: Required DOM element not found."):console.log("DOM elements obtained successfully.");function G(o){if(!o)return"";try{const e=new Date(o),t={year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",hour12:!1};return e.toLocaleString("ja-JP",t)}catch(e){return console.error("Error formatting date:",o,e),o}}function j(o){if(!o)return{text:"",className:""};try{const e=new Date(o),t=new Date,a=e.getTime()-t.getTime(),s=Math.floor(a/(1e3*60)),n=Math.floor(a/(1e3*60*60)),i=Math.floor(a/(1e3*60*60*24));return a<0?{text:"期限切れ",className:"overdue"}:s<1?{text:"あとわずか",className:""}:s<60?{text:`あと ${s} 分`,className:""}:n<24?{text:`あと ${n} 時間`,className:""}:{text:`あと ${i} 日`,className:"far"}}catch(e){return console.error("Error calculating remaining time:",o,e),{text:"(日時エラー)",className:"overdue"}}}function S(){console.log("[Debug] updateRemainingTimes called"),document.querySelectorAll(".list-group-item").forEach(o=>{const e=o.querySelector(".remaining-time"),t=o.dataset.dueDate;if(!m.contains(o)&&e&&t){const s=j(t);e.textContent=s.text,e.className="remaining-time",s.className&&e.classList.add(s.className)}else e&&(e.textContent="",e.className="remaining-time")})}function O(){console.log("[Debug] loadTasks called");try{const o=JSON.parse(localStorage.getItem("tasks")||"[]"),e=JSON.parse(localStorage.getItem("deletedTasks")||"[]");console.log("[Debug] Tasks loaded from localStorage:",o),console.log("[Debug] Deleted tasks loaded from localStorage:",e),u?u.innerHTML="":console.error("taskList not found for clearing"),m?m.innerHTML="":console.error("completedTaskList not found for clearing"),o.forEach(t=>{h(t.text,t.status||(t.completed?"completed":"pending"),t.dueDate,!1,t.priority,t.details,t.createdAt)}),console.log("[Debug] Tasks rendered from localStorage."),S()}catch(o){console.error("Error loading or parsing tasks from localStorage:",o)}}function I(){console.log("[Debug] saveTasks called");try{const o=[];document.querySelectorAll("#task-list .list-group-item, #in-progress-task-list .list-group-item, #completed-task-list .list-group-item").forEach(e=>{const t=e.querySelector(".task-text"),a=e.dataset.status,s=e.dataset.dueDate||"",n=parseInt(e.dataset.priority)||0,i=e.dataset.details||"",r=e.dataset.createdAt||new Date().toISOString();t&&t.textContent?o.push({text:t.textContent,status:a,dueDate:s,priority:n,details:i,createdAt:r}):console.warn("[Debug] Item without span or text found:",e)}),localStorage.setItem("tasks",JSON.stringify(o)),console.log("[Debug] Tasks saved to localStorage:",o)}catch(o){console.error("Error saving tasks to localStorage:",o)}}function K(o){console.log("[Debug] saveDeletedTask called");try{const e=JSON.parse(localStorage.getItem("deletedTasks")||"[]");o.deletedAt=new Date().toISOString(),e.push(o),localStorage.setItem("deletedTasks",JSON.stringify(e)),console.log("[Debug] Deleted task saved to localStorage:",o)}catch(e){console.error("Error saving deleted task to localStorage:",e)}}L&&p&&y?(L.addEventListener("click",F),console.log("[Debug] Add button click listener added.")):console.error("Required elements for adding task not found, cannot add click listener.");p?(p.addEventListener("keypress",function(o){o.key==="Enter"&&(o.preventDefault(),F())}),console.log("[Debug] Task input keypress listener added.")):console.error("Task input not found, cannot add keypress listener.");function F(){if(console.log("[Debug] addTask called"),!p||!y){console.error("Input elements missing!");return}const o=p.value.trim(),e=M.value.trim(),t=y.value,a=parseInt(document.getElementById("task-priority").value);console.log("[Debug] Task text:",`"${o}"`,"Due Date:",`"${t}"`,"Priority:",a),o!==""?(h(o,"pending",t,!0,a,e,new Date().toISOString()),p.value="",M.value="",y.value="",document.getElementById("task-priority").value="0",p.focus(),console.log("[Debug] Task potentially added.")):(alert("タスクを入力してください."),console.log("[Debug] Task text was empty."))}function h(o,e="pending",t,a=!0,s=0,n="",i=null){if(console.log(`[Debug] createTaskItem: text='${o}', status=${e}, dueDate='${t}', saving=${a}, priority=${s}, details='${n}'`),!u||!$||!m){console.error("Task list elements not found!");return}try{const r=document.createElement("li");r.classList.add("list-group-item","bg-transparent","border-dark"),t&&(r.dataset.dueDate=t),r.dataset.priority=s,n&&(r.dataset.details=n),r.dataset.createdAt=i||new Date().toISOString(),r.dataset.status=e,console.log(`[Debug] Created list item with status: ${e}, classList: ${r.classList}`);const d=document.createElement("div");d.classList.add("d-flex","align-items-center","bg-transparent");const k=document.createElement("input");k.type="checkbox",k.classList.add("form-check-input","me-2"),k.checked=e==="completed",k.addEventListener("change",U);const g=document.createElement("div");g.classList.add("task-content-wrapper");const T=document.createElement("span");T.classList.add("priority-indicator"),T.textContent="★".repeat(s),g.appendChild(T);const f=document.createElement("span");if(f.classList.add("task-text"),f.textContent=o,g.appendChild(f),t&&e!=="completed"){const l=document.createElement("span");l.classList.add("due-date"),l.textContent=`期限: ${G(t)}`,g.appendChild(l);const c=document.createElement("span");c.classList.add("remaining-time");const b=j(t);c.textContent=b.text,b.className&&c.classList.add(b.className),g.appendChild(c)}if(n){console.log("[Debug] Creating details section for task with details:",n);const l=document.createElement("button");l.classList.add("btn","btn-link","btn-sm","p-0","ms-2","toggle-details"),l.innerHTML='<i class="fas fa-chevron-down"></i>',l.title="詳細を表示/非表示",g.appendChild(l);const c=document.createElement("div");c.classList.add("task-details-container","collapse");const b=A=>{const C=/(https?:\/\/[^\s]+)/g;return A.replace(C,N=>`<a href="${N}" target="_blank" rel="noopener noreferrer" class="text-primary">${N}</a>`)},w=document.createElement("div");w.classList.add("task-details-content","mt-2","p-2"),w.innerHTML=b(n.replace(/\n/g,"<br>")),c.appendChild(w),l.addEventListener("click",A=>{A.stopPropagation(),console.log("[Debug] Toggle details clicked. Current state:",c.classList.contains("show")),c.classList.toggle("show");const C=l.querySelector("i");C.classList.toggle("fa-chevron-up"),C.classList.toggle("fa-chevron-down"),console.log("[Debug] Details container classes after toggle:",c.classList)}),r.appendChild(d),r.appendChild(c),console.log("[Debug] Details container added to list item")}else r.appendChild(d);const E=document.createElement("button");if(E.classList.add("btn","btn-outline-primary","btn-sm","me-2"),E.innerHTML='<i class="fas fa-edit"></i>',E.addEventListener("click",()=>V(r)),e==="pending"){const l=document.createElement("button");l.classList.add("btn","btn-success","btn-sm","me-2"),l.innerHTML='<i class="fas fa-play me-1"></i>Start!',l.addEventListener("click",()=>Y(r)),d.appendChild(l)}const x=document.createElement("button");if(x.classList.add("btn","btn-danger","btn-sm"),x.innerHTML='<i class="fas fa-trash-alt"></i>',x.addEventListener("click",_),e==="completed"){if(console.log("[Debug] Task is completed, adding completed styles"),console.log("[Debug] Before style application - taskSpan classList:",f.classList),console.log("[Debug] Before style application - listItem classList:",r.classList),f.classList.add("text-decoration-line-through"),r.classList.add("completed"),r.classList.remove("bg-transparent"),d.classList.remove("bg-transparent"),r.style.backgroundColor="var(--completed-bg)",d.style.backgroundColor="var(--completed-bg)",f.style.color="var(--completed-text)",g.style.color="var(--completed-text)",T.style.color="var(--completed-text)",n){const l=r.querySelector(".task-details-container");if(l){l.classList.remove("bg-transparent"),l.style.backgroundColor="var(--completed-bg)";const c=l.querySelector(".task-details-content");c&&(c.style.color="var(--completed-text)")}}console.log("[Debug] After style application - taskSpan classList:",f.classList),console.log("[Debug] After style application - listItem classList:",r.classList),console.log("[Debug] After style application - taskSpan style:",f.style.cssText),console.log("[Debug] After style application - listItem style:",r.style.cssText),console.log("[Debug] After style application - contentWrapper style:",g.style.cssText)}return d.appendChild(k),d.appendChild(g),d.appendChild(E),d.appendChild(x),e==="completed"?(console.log("[Debug] Adding task to completed list"),m.appendChild(r)):e==="in-progress"?(console.log("[Debug] Adding task to in-progress list"),$.appendChild(r)):(console.log("[Debug] Adding task to pending list"),u.appendChild(r)),r.classList.add("task-item-entering"),requestAnimationFrame(()=>{r.classList.remove("task-item-entering")}),a&&I(),r}catch(r){console.error("Error in createTaskItem:",r)}}function U(o){console.log("[Debug] toggleTask called");try{const e=o.target,t=e.closest("li");if(!t){console.error("Parent li not found");return}const a=t.querySelector(".task-text");if(!a){console.error("Span not found");return}const s=a.textContent,n=e.checked,i=t.dataset.dueDate||"",r=parseInt(t.dataset.priority)||3,d=t.dataset.details||"";console.log(`[Debug] Toggling task '${s}' to completed=${n}, dueDate='${i}', priority=${r}, details='${d}'`),console.log(`[Debug] Current task classList before toggle: ${t.classList}`),t.remove();const k=h(s,n?"completed":"pending",i,!0,r,d);console.log(`[Debug] New task classList after toggle: ${k.classList}`),console.log("[Debug] toggleTask finished."),S()}catch(e){console.error("Error in toggleTask:",e)}}function _(o){console.log("[Debug] deleteTask called");try{const e=o.target.closest("button");if(!e){console.warn("Delete button not found");return}const t=e.closest("li");if(!t){console.error("Parent li not found");return}const a=t.querySelector(".task-text").textContent,s=m.contains(t),n=t.dataset.dueDate||"",i=parseInt(t.dataset.priority)||3,r=t.dataset.details||"";K({id:Date.now().toString(),text:a,status:s?"completed":"pending",dueDate:n,priority:i,details:r}),console.log("[Debug] Applying leaving animation"),t.classList.add("task-item-leaving"),t.addEventListener("transitionend",()=>{console.log("[Debug] Transition ended, removing and saving"),t.parentNode?(t.remove(),console.log("[Debug] List item removed."),I()):console.warn("Item already removed?"),console.log("[Debug] deleteTask (after transition) finished.")},{once:!0})}catch(e){console.error("Error in deleteTask:",e)}}function H(){if(console.log("[Debug] Initializing drag and drop"),typeof Sortable>"u"){console.error("Sortable library not loaded.");return}u?(new Sortable(u,{animation:150,ghostClass:"sortable-ghost",chosenClass:"sortable-chosen",dragClass:"sortable-drag",handle:".list-group-item",onEnd:function(o){console.log("[Debug] Drag ended, saving order."),I()}}),console.log("[Debug] SortableJS initialized for active list.")):console.error("Cannot init SortableJS: taskList missing.")}function B(o="priority"){const e=Array.from(u.children);e.sort((t,a)=>{if(o==="priority"){const s=parseInt(t.dataset.priority)||0;return(parseInt(a.dataset.priority)||0)-s}else if(o==="date-asc"){const s=new Date(t.dataset.createdAt||0),n=new Date(a.dataset.createdAt||0);return s-n}else if(o==="date-desc"){const s=new Date(t.dataset.createdAt||0);return new Date(a.dataset.createdAt||0)-s}}),e.forEach(t=>u.appendChild(t)),I()}function Q(){const e=document.getElementById("task-list-area").querySelector(".card-header"),t=e.querySelector(".sort-button-group");t&&t.remove();const a=document.createElement("div");a.classList.add("sort-button-group","btn-group");const s=document.createElement("button");s.classList.add("btn","btn-outline-primary","btn-sm","sort-button"),s.innerHTML='<i class="fas fa-star me-1"></i>優先度',s.addEventListener("click",()=>B("priority"));const n=document.createElement("button");n.classList.add("btn","btn-outline-primary","btn-sm","sort-button"),n.innerHTML='<i class="fas fa-clock me-1"></i>新しい順',n.addEventListener("click",()=>B("date-desc"));const i=document.createElement("button");i.classList.add("btn","btn-outline-primary","btn-sm","sort-button"),i.innerHTML='<i class="fas fa-clock me-1"></i>古い順',i.addEventListener("click",()=>B("date-asc")),a.appendChild(s),a.appendChild(n),a.appendChild(i),e.appendChild(a)}window.addEventListener("load",()=>{console.log("[Debug] Window load event fired"),p&&y&&L&&u&&m?(typeof O=="function"?O():console.error("loadTasks not found"),typeof H=="function"?H():console.error("initializeDragAndDrop not found"),typeof S=="function"?(setInterval(S,6e4),console.log("[Debug] Remaining time updater initialized.")):console.error("updateRemainingTimes function not found"),Q()):console.error("Cannot run initialization: essential elements missing.")});function V(o){D=o;const e=o.querySelector(".task-text").textContent,t=o.dataset.dueDate||"",a=parseInt(o.dataset.priority)||3,s=o.dataset.details||"";J.value=e,z.value=t?t.slice(0,16):"",W.value=a,R.value=s,P.show()}function X(){if(!D)return;const o=J.value.trim(),e=z.value,t=parseInt(W.value),a=R.value;if(o){const s=m.contains(D);D.remove(),h(o,s?"completed":"pending",e,!0,t,a),P.hide(),D=null}else alert("タスク内容を入力してください。")}q&&q.addEventListener("click",X);function Y(o){const e=o.querySelector(".task-text").textContent,t=o.dataset.dueDate,a=parseInt(o.dataset.priority)||0,s=o.dataset.details||"",n=o.dataset.createdAt;o.remove(),h(e,"in-progress",t,!0,a,s,n)}console.log("--- script.js finished executing ---");
